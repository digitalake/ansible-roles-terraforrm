stages:
  - validate
  - plan
  - apply
  - destroy
  - trigger_job

default:
  image:
    name: hashicorp/terraform
    pull_policy: if-not-present
    entrypoint:
      - /usr/bin/env
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:"
  tags:
    - docker
  before_script:
    - terraform init
  cache:
    key: terraform
    paths:
      - .terraform


tf-validate:
  stage: validate
  script:
    - terraform validate
    - terraform fmt
    - terraform fmt -check

tf-plan:
  stage: plan
  needs: ["tf-validate"]
  script:
    - terraform plan

tf-apply:
  image: 
    name: registry.gitlab.com/ivan.yakimenko.win/gitops:terraform-plus-cdrkit
    pull_policy: if-not-present
    entrypoint:
      - /usr/bin/env
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:"
  stage: apply
  needs: ["tf-plan"]
  artifacts:
    paths:
      - templates/hosts.cfg
    expire_in: 1 week
  tags:
    - docker
  script:
    - terraform apply -auto-approve

tf-destroy:
  stage: destroy
  script:
    - terraform destroy -auto-approve
  when: manual

trigger_job:
  image: 
    name: alpine/curl
    pull_policy: if-not-present
  stage: trigger_job
  needs: ["tf-apply"]
  before_script:
  - ''
  cache: []
  script:
    - >-
     "curl -X POST --fail 
     -F token=${ANSIBLE_TRIGGER_TOKEN} 
     -F ref=${CI_COMMIT_REF_NAME} 
     https://gitlab.com/api/v4/projects/40280486/trigger/pipeline"
